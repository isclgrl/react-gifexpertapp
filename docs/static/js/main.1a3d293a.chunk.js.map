{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OAEQ,0BAAMC,SAbO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAUV,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAtBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAeXM,GAfW,4CAAH,sDCDNO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OAFAc,QAAQC,IAAIL,EAAMV,GAGd,yBAAKgB,UAAU,0CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCLHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAwBtC,OAjBAC,qBAAU,WAEN1B,EAAOC,GAAU0B,MAAK,SAAAC,GACdC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAQ,MAEd,UAGZ,CAACtB,IAMIuB,EDrBwBM,CAAa7B,GAAhCa,EAHuB,EAG5BN,KAAae,EAHe,EAGfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqClB,GAClDsB,GAAW,uBAAGJ,UAAU,oCAAb,YACZ,yBAAKA,UAAU,aAGPL,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIoB,IAAKpB,EAAIC,IACLD,UEfnBqB,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,sBAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAS9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEJ,4BAEQ+C,EAAWvB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI8B,IAAM9B,EACNA,SAAWA,U,MCjBnCiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1a3d293a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2)\r\n        {\r\n            setCategories(cate => [inputValue,...cate]);\r\n            setInputValue('');\r\n        }else{\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n    \r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    value ={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGif = async ( category )=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=umABPJwrS2xDph6udVUK5iesBz2P2WZ6`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log(title,url);\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGif} from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGif(category).then(imgs =>{\r\n                setTimeout(()=>{\r\n                    setState({\r\n                        data: imgs,\r\n                        loading:false\r\n                    });\r\n                },2000);\r\n            })\r\n\r\n    },[category])\r\n\r\n\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Twenty One Pilots'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     // seTcategories(['Pokemon',...categories]);\r\n    //     // seTcategories(cate => [...cate, 'Pokemon']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n        <ol>\r\n            { \r\n                categories.map( category => (\r\n                    <GifGrid \r\n                        key={ category }\r\n                        category={ category } \r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}